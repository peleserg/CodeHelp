export const TrConceptGroups = new Map()
TrConceptGroups.set("constant", {en: "Сonstant", ru: "Константа"})
TrConceptGroups.set("variable", {en: "Variable", ru: "Переменная"})
TrConceptGroups.set("loop", {en: "Loops", ru: "Циклы"})
TrConceptGroups.set("bitwise", {en: "Bitwise operators", ru: "Побитовые операторы"})
TrConceptGroups.set("array", {en: "Arrays", ru: "Массивы"})
TrConceptGroups.set("io", {en: "Input, Output", ru: "Ввод, вывод"})
TrConceptGroups.set("function", {en: "Functions", ru: "Функции"})
TrConceptGroups.set("project", {en: "Projects", ru: "Проекты"})
TrConceptGroups.set("module", {en: "Modules", ru: "Модули"})
TrConceptGroups.set("type", {en: "Types", ru: "Типы"})
TrConceptGroups.set("condition", {en: "Conditional statements", ru: "Условные операторы"})
TrConceptGroups.set("pointer", {en: "Pointers", ru: "Указатели"})

export const TrConcepts = new Map()
TrConcepts.set("constant-definition", {en: "Сonstant definition", ru: "Определение константы"})
TrConcepts.set("variable-definition", {en: "Variable definition", ru: "Определение переменной"})
TrConcepts.set("for", {en: "For loop", ru: "Цикл for"})
TrConcepts.set("while", {en: "While loop", ru: "Цикл while"})
TrConcepts.set("infinite-loop", {en: "Infinite loop", ru: "Бесконечный цикл"})
TrConcepts.set("if", {en: "If"})
TrConcepts.set("if-else", {en: "If - Else"})
TrConcepts.set("switch", {en: "Switch"})
TrConcepts.set("switch-fallthrough", {en: "Switch with fallthrough"})
TrConcepts.set("bitwise-xor", {en: "XOR", ru: "XOR"})
TrConcepts.set("array-length", {en: "Array length", ru: "Длина массива"})
TrConcepts.set("array-add", {en: "Add element"})
TrConcepts.set("array-remove", {en: "Delete element"})
TrConcepts.set("array-includes", {en: "Element exists in array"})
TrConcepts.set("array-index-of", {en: "Element index"})
TrConcepts.set("console-import", {en: "Imports"})
TrConcepts.set("console-output", {en: "Output"})
TrConcepts.set("simple-function", {en: "Simple function", ru: "Простая функция"})
TrConcepts.set("function-with-arguments", {en: "Function with arguments", ru: "Функция с аргументами"})
TrConcepts.set("function-call", {en: "Function call", ru: "Вызов функции"})
TrConcepts.set("deferred-call", {en: "Deferred call", ru: "Отложенный вызов"})
TrConcepts.set("hello-world-console", {en: "Hello World"})
TrConcepts.set("module-declaration", {en: "Module declaration", ru: "Объявление модуля"})
TrConcepts.set("module-import", {en: "Module import", ru: "Импорт модуля"})
TrConcepts.set("type-conversion", {en: "Type conversion", ru: "Преобразование типов"})
TrConcepts.set("pointer-definition", {en: "Pointer definition", ru: "Определение указателя"})
TrConcepts.set("pointer-dereferencing", {en: "Pointer definition", ru: "Разыменовывание указателя"})

export const TrCodeDescriptions = new Map()
TrCodeDescriptions.set("javascript-variable-let", {en: "Block scope", ru: "С блочной областью видимости"})
TrCodeDescriptions.set("go-function-multiple-return", {en: "Multiple return"})
TrCodeDescriptions.set("go-function-named-return", {en: "Named return"})

export const TrInterface = new Map()
TrInterface.set("settings", {en: "Settings", ru: "Настройки"})
TrInterface.set("search", {en: "Search...", ru: "Поиск..."})
TrInterface.set("language-not-selected", {en: "Language not selected", ru: "Язык не выбран"})
TrInterface.set("compare-mode", {en: "Compare mode", ru: "Режим сравнения"})
TrInterface.set("no-sample-code", {en: "No sample code", ru: "Нет примера кода"})
TrInterface.set("languages", {en: "Programming languages", ru: "Языки программирования"})
TrInterface.set("translation", {en: "Translation", ru: "Язык интерфейса"})
TrInterface.set("miscellaneous", {en: "Miscellaneous", ru: "Разное"})
TrInterface.set("hide-blocks-without-code", {en: "Hide blocks without code", ru: "Скрывать блоки без примеров кода"})
TrInterface.set("en", {en: "English", ru: "Английский"})
TrInterface.set("ru", {en: "Russian", ru: "Русский"})

export const TrLanguages = new Map()
TrLanguages.set("csharp", {en: "C#"})
TrLanguages.set("go", {en: "Go"})
TrLanguages.set("javascript", {en: "JavaScript"})

export const TrSynonyms = new Map()
TrSynonyms.set("array-length", {en: "size, count", ru: "размер"})
TrSynonyms.set("array-remove", {en: "delete"})
TrSynonyms.set("array-includes", {en: "contains"})
TrSynonyms.set("simple-function", {en: "procedure"})
TrSynonyms.set("module", {en: "package"})
TrSynonyms.set("pointer-dereferencing", {en: "indirecting"})